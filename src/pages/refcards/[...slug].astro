---
import { getCollection } from "astro:content";
import Bloglayout from "../../layouts/BlogLayout.astro";
import "../../styles/markdown.css";
export async function getStaticPaths() {
	const refPosts = await getCollection("refcards");

	return refPosts.map((post) => {
		return {
			params: { slug: post.slug },
			props: { post },
		};
	});
}

const { post } = Astro.props;
const { Content,remarkPluginFrontmatter } = await post.render();

import PathUi from "../../components/svelte/PathUi.svelte";
---
<script>
const script = document.createElement("script");
const container = document.querySelector("#utterances-container"); // your id in your html above

// Replace the value of each key with yours
Object.entries({
  src: "https://utteranc.es/client.js",
  repo: "SureshPradhana/suresh_pradhana",
  "issue-term": "pathname",
  label: "commentsðŸ’¬", // omit this line, if you don't need label
  theme: "github-dark",
  crossorigin: "anonymous",
}).forEach(([key, value]) => {
  script.setAttribute(key, value);
});


container?.appendChild(script);
</script>


<Bloglayout>
	<PathUi path={["Home","RefCards", post.data.slug]} />
	<div class="blog-container">
		<h1 class="heading">{post.data.title}</h1>
		<time datetime={post.data.date.toISOString()}>
			{post.data.date.toDateString()}
		</time>
		<span class="time">{remarkPluginFrontmatter.minutesRead}</span>
		<Content />
	</div>
	<h2>Comments</h2>

<div id="utterances-container"></div>
</Bloglayout>

<style>
	.blog-container {
		max-width: 800px;
		/* margin:0  auto; */
		padding: 1rem 0;
		flex: 1;
	}
	.heading {
		font-size: var(--h1);
		font-weight: 600;
		border-bottom: none;
	}

	.blog-container h1 {
		margin: 0;
		padding: 0.2rem 0;
		line-height: 1;
	}
	.time{
		color: #605d5d;
		margin-left:1rem;
	}
	/* styles/markdown.css */

</style>

<script>
 import { icons } from 'feather-icons';
 document.addEventListener('DOMContentLoaded', () => {
    const codeBlocks = document.querySelectorAll('pre');

  codeBlocks.forEach(element => {
    const expandButton = document.createElement('button');
    expandButton.innerHTML = icons.maximize.toSvg({ class: 'feather', width: '18px', height:
	'18px' });
    expandButton.classList.add('expand-button');
    const copyButton = document.createElement('button');
    copyButton.innerHTML = icons.copy.toSvg({ class: 'feather', width: '18px', height:
	'18px' });
    copyButton.classList.add('copy-button');
	element.appendChild(expandButton);
	element.appendChild(copyButton);

	copyButton.addEventListener('click', () => {
	  navigator.clipboard.writeText(element.querySelector('code').innerText);
	});

    expandButton.addEventListener('click', () => {
      element.classList.toggle('code-fullscreen');
      document.body.classList.toggle('body-no-scroll', element.classList.contains('code-fullscreen'));
    });
  });
});

</script>
